# Generated by Django 5.0.7 on 2025-08-25 22:32

from django.db import migrations, models


def set_fk_values_and_cleanup(apps, schema_editor):
    """Set the ForeignKey values based on tipo_temp and cleanup"""
    Documento = apps.get_model('contrapartes', 'Documento')
    TipoDocumento = apps.get_model('contrapartes', 'TipoDocumento')
    
    # Mapping of old string values to new codes
    tipo_mapping = {
        'dd': 'cedula',
        'contrato': 'contrato',
        'certificacion': 'certificacion',
        'otro': 'otro'
    }
    
    # Get the "otro" type as fallback
    tipo_otro = TipoDocumento.objects.filter(codigo='otro').first()
    
    for documento in Documento.objects.all():
        if documento.tipo_temp:
            # Find the corresponding TipoDocumento
            codigo_nuevo = tipo_mapping.get(documento.tipo_temp, 'otro')
            tipo_documento = TipoDocumento.objects.filter(codigo=codigo_nuevo).first()
            
            if not tipo_documento:
                tipo_documento = tipo_otro
                
            documento.tipo = tipo_documento
            documento.save()


def reverse_set_fk_values(apps, schema_editor):
    """Reverse setting ForeignKey values"""
    Documento = apps.get_model('contrapartes', 'Documento')
    for documento in Documento.objects.all():
        documento.tipo = None
        documento.save()


class Migration(migrations.Migration):

    dependencies = [
        ('contrapartes', '0007_convert_tipo_to_fk_step2'),
    ]

    operations = [
        # Step 1: Set ForeignKey values based on tipo_temp
        migrations.RunPython(
            set_fk_values_and_cleanup,
            reverse_set_fk_values,
        ),
        
        # Step 2: Make tipo field non-nullable now that values are set
        migrations.AlterField(
            model_name='documento',
            name='tipo',
            field=models.ForeignKey(
                help_text='Tipo de documento', 
                limit_choices_to={'activo': True}, 
                on_delete=models.PROTECT, 
                related_name='documentos', 
                to='contrapartes.tipodocumento', 
                verbose_name='Tipo de documento'
            ),
        ),
        
        # Step 3: Add date fields to Documento
        migrations.AddField(
            model_name='documento',
            name='fecha_emision',
            field=models.DateField(blank=True, help_text='Fecha en que fue emitido el documento', null=True, verbose_name='Fecha de emisión'),
        ),
        
        migrations.AddField(
            model_name='documento',
            name='fecha_expiracion',
            field=models.DateField(blank=True, help_text='Fecha en que expira la validez del documento', null=True, verbose_name='Fecha de expiración'),
        ),
        
        # Step 4: Remove the temporary field
        migrations.RemoveField(
            model_name='documento',
            name='tipo_temp',
        ),
    ]
